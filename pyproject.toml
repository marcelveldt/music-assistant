[build-system]
requires = ["setuptools~=62.3", "wheel~=0.37.1"]
build-backend = "setuptools.build_meta"

[project]
name = "music_assistant"
version = attr: music_assistant.constants.__version__
license     = "Apache-2.0"
description = "Music Assistant"
readme = "README.md"
requires-python = ">=3.11"
author = marcelveldt
author_email = marcelveldt@users.noreply.github.com
classifiers = [
  "Environment :: Console",
  "Programming Language :: Python :: 3.11",
]
dependencies = [
  "aiohttp",
  "coloredlogs",
  "orjson",
  "mashumaro>=3.5"
]

[project.optional-dependencies]
server = [
  "aiohttp==3.8.4",
  "asyncio-throttle==1.0.2",
  "aiofiles==23.1.0",
  "aiorun==2022.11.1",
  "databases==0.7.0",
  "aiosqlite==0.18.0",
  "python-slugify==7.0.0",
  "memory-tempfile==2.2.3",
  "pillow==9.4.0",
  "unidecode==1.3.6",
  "mashumaro==3.5",
  "xmltodict==0.13.0",
  "orjson==3.8.6",
  "shortuuid==1.0.11",
  "zeroconf==0.47.3",
  "cryptography==39.0.2"
]
test = [
  "black==23.1.0",
  "flake8==6.0.0",
  "flake8-docstrings==1.7.0",
  "isort==5.12.0",
  "mypy==1.0.1",
  "pydocstyle==6.1.1",
  "pylint==2.16.2",
  "pytest==7.2.1",
  "pytest-aiohttp==1.0.4",
  "pytest-cov==4.0.0",
  "pre-commit==2.20.0"
]

[project.scripts]
mass = "music_assistant.server.__main__:main"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
#disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
mypy_path = "music_assistant/"
no_implicit_optional = true
show_error_codes = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "aiorun",
  "coloredlogs",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.setuptools]
platforms = ["any"]
zip-safe  = false
include-package-data = true

[tool.setuptools.package-data]
music_assistant = ["py.typed"]

[tool.setuptools.packages.find]
include = ["music_assistant*"]


[tool.pylint.master]
ignore-patterns=["app_vars"]
# Use a conservative default here; 2 should speed up most setups and not hurt
# any too bad. Override on command line as appropriate.
jobs=2
persistent=no
suggestion-mode=yes
extension-pkg-whitelist=["orjson"]

[tool.pylint.BASIC]
class-const-naming-style = "any"
good-names = [
    "_",
    "ev",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "Run",
    "ip",
    "db
]

[tool.pylint."MESSAGES CONTROL"]
# fixme - we are still a work in progress
# too-many-instance-attributes - just because it is unavoidable
# too-few-public-methods - just because it is unavoidable
# too-many-arguments - just because it is unavoidable
disable = [
    "fixme",
    "too-many-instance-attributes",
    "too-few-public-methods",
    "too-many-arguments"
]

[tool.isort]
# https://github.com/PyCQA/isort/wiki/isort-Settings
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88

[tool.pydocstyle]
add-ignore = D202

